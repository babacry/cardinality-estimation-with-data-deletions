// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: theta_sketch_dup.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_theta_5fsketch_5fdup_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_theta_5fsketch_5fdup_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_theta_5fsketch_5fdup_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_theta_5fsketch_5fdup_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_theta_5fsketch_5fdup_2eproto;
namespace datasketches_pb {
class Update_theta_sketch_dup;
class Update_theta_sketch_dupDefaultTypeInternal;
extern Update_theta_sketch_dupDefaultTypeInternal _Update_theta_sketch_dup_default_instance_;
class Update_theta_sketch_dup_hash_map_count;
class Update_theta_sketch_dup_hash_map_countDefaultTypeInternal;
extern Update_theta_sketch_dup_hash_map_countDefaultTypeInternal _Update_theta_sketch_dup_hash_map_count_default_instance_;
}  // namespace datasketches_pb
PROTOBUF_NAMESPACE_OPEN
template<> ::datasketches_pb::Update_theta_sketch_dup* Arena::CreateMaybeMessage<::datasketches_pb::Update_theta_sketch_dup>(Arena*);
template<> ::datasketches_pb::Update_theta_sketch_dup_hash_map_count* Arena::CreateMaybeMessage<::datasketches_pb::Update_theta_sketch_dup_hash_map_count>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace datasketches_pb {

// ===================================================================

class Update_theta_sketch_dup_hash_map_count PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:datasketches_pb.Update_theta_sketch_dup.hash_map_count) */ {
 public:
  inline Update_theta_sketch_dup_hash_map_count() : Update_theta_sketch_dup_hash_map_count(nullptr) {}
  virtual ~Update_theta_sketch_dup_hash_map_count();

  Update_theta_sketch_dup_hash_map_count(const Update_theta_sketch_dup_hash_map_count& from);
  Update_theta_sketch_dup_hash_map_count(Update_theta_sketch_dup_hash_map_count&& from) noexcept
    : Update_theta_sketch_dup_hash_map_count() {
    *this = ::std::move(from);
  }

  inline Update_theta_sketch_dup_hash_map_count& operator=(const Update_theta_sketch_dup_hash_map_count& from) {
    CopyFrom(from);
    return *this;
  }
  inline Update_theta_sketch_dup_hash_map_count& operator=(Update_theta_sketch_dup_hash_map_count&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Update_theta_sketch_dup_hash_map_count& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Update_theta_sketch_dup_hash_map_count* internal_default_instance() {
    return reinterpret_cast<const Update_theta_sketch_dup_hash_map_count*>(
               &_Update_theta_sketch_dup_hash_map_count_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Update_theta_sketch_dup_hash_map_count& a, Update_theta_sketch_dup_hash_map_count& b) {
    a.Swap(&b);
  }
  inline void Swap(Update_theta_sketch_dup_hash_map_count* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Update_theta_sketch_dup_hash_map_count* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Update_theta_sketch_dup_hash_map_count* New() const final {
    return CreateMaybeMessage<Update_theta_sketch_dup_hash_map_count>(nullptr);
  }

  Update_theta_sketch_dup_hash_map_count* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Update_theta_sketch_dup_hash_map_count>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Update_theta_sketch_dup_hash_map_count& from);
  void MergeFrom(const Update_theta_sketch_dup_hash_map_count& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Update_theta_sketch_dup_hash_map_count* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "datasketches_pb.Update_theta_sketch_dup.hash_map_count";
  }
  protected:
  explicit Update_theta_sketch_dup_hash_map_count(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_theta_5fsketch_5fdup_2eproto);
    return ::descriptor_table_theta_5fsketch_5fdup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashValFieldNumber = 1,
    kCntFieldNumber = 2,
  };
  // uint64 hash_val = 1;
  void clear_hash_val();
  ::PROTOBUF_NAMESPACE_ID::uint64 hash_val() const;
  void set_hash_val(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_hash_val() const;
  void _internal_set_hash_val(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 cnt = 2;
  void clear_cnt();
  ::PROTOBUF_NAMESPACE_ID::uint64 cnt() const;
  void set_cnt(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_cnt() const;
  void _internal_set_cnt(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:datasketches_pb.Update_theta_sketch_dup.hash_map_count)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 hash_val_;
  ::PROTOBUF_NAMESPACE_ID::uint64 cnt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_theta_5fsketch_5fdup_2eproto;
};
// -------------------------------------------------------------------

class Update_theta_sketch_dup PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:datasketches_pb.Update_theta_sketch_dup) */ {
 public:
  inline Update_theta_sketch_dup() : Update_theta_sketch_dup(nullptr) {}
  virtual ~Update_theta_sketch_dup();

  Update_theta_sketch_dup(const Update_theta_sketch_dup& from);
  Update_theta_sketch_dup(Update_theta_sketch_dup&& from) noexcept
    : Update_theta_sketch_dup() {
    *this = ::std::move(from);
  }

  inline Update_theta_sketch_dup& operator=(const Update_theta_sketch_dup& from) {
    CopyFrom(from);
    return *this;
  }
  inline Update_theta_sketch_dup& operator=(Update_theta_sketch_dup&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Update_theta_sketch_dup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Update_theta_sketch_dup* internal_default_instance() {
    return reinterpret_cast<const Update_theta_sketch_dup*>(
               &_Update_theta_sketch_dup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Update_theta_sketch_dup& a, Update_theta_sketch_dup& b) {
    a.Swap(&b);
  }
  inline void Swap(Update_theta_sketch_dup* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Update_theta_sketch_dup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Update_theta_sketch_dup* New() const final {
    return CreateMaybeMessage<Update_theta_sketch_dup>(nullptr);
  }

  Update_theta_sketch_dup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Update_theta_sketch_dup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Update_theta_sketch_dup& from);
  void MergeFrom(const Update_theta_sketch_dup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Update_theta_sketch_dup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "datasketches_pb.Update_theta_sketch_dup";
  }
  protected:
  explicit Update_theta_sketch_dup(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_theta_5fsketch_5fdup_2eproto);
    return ::descriptor_table_theta_5fsketch_5fdup_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Update_theta_sketch_dup_hash_map_count hash_map_count;

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 11,
    kSerialVersionFieldNumber = 1,
    kSketchTypeFieldNumber = 2,
    kRfFieldNumber = 3,
    kLgNomSizeFieldNumber = 4,
    kLgCurSizeFieldNumber = 5,
    kFlagsByteFieldNumber = 6,
    kSeedHashFieldNumber = 7,
    kNumKeysFieldNumber = 8,
    kPFieldNumber = 9,
    kThetaFieldNumber = 10,
    kPreambleLongsFieldNumber = 12,
  };
  // repeated .datasketches_pb.Update_theta_sketch_dup.hash_map_count keys = 11;
  int keys_size() const;
  private:
  int _internal_keys_size() const;
  public:
  void clear_keys();
  ::datasketches_pb::Update_theta_sketch_dup_hash_map_count* mutable_keys(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::datasketches_pb::Update_theta_sketch_dup_hash_map_count >*
      mutable_keys();
  private:
  const ::datasketches_pb::Update_theta_sketch_dup_hash_map_count& _internal_keys(int index) const;
  ::datasketches_pb::Update_theta_sketch_dup_hash_map_count* _internal_add_keys();
  public:
  const ::datasketches_pb::Update_theta_sketch_dup_hash_map_count& keys(int index) const;
  ::datasketches_pb::Update_theta_sketch_dup_hash_map_count* add_keys();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::datasketches_pb::Update_theta_sketch_dup_hash_map_count >&
      keys() const;

  // uint32 serial_version = 1;
  void clear_serial_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 serial_version() const;
  void set_serial_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_serial_version() const;
  void _internal_set_serial_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 sketch_type = 2;
  void clear_sketch_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 sketch_type() const;
  void set_sketch_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sketch_type() const;
  void _internal_set_sketch_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rf = 3;
  void clear_rf();
  ::PROTOBUF_NAMESPACE_ID::uint32 rf() const;
  void set_rf(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rf() const;
  void _internal_set_rf(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 lg_nom_size = 4;
  void clear_lg_nom_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 lg_nom_size() const;
  void set_lg_nom_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lg_nom_size() const;
  void _internal_set_lg_nom_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 lg_cur_size = 5;
  void clear_lg_cur_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 lg_cur_size() const;
  void set_lg_cur_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lg_cur_size() const;
  void _internal_set_lg_cur_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 flags_byte = 6;
  void clear_flags_byte();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_byte() const;
  void set_flags_byte(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags_byte() const;
  void _internal_set_flags_byte(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 seed_hash = 7;
  void clear_seed_hash();
  ::PROTOBUF_NAMESPACE_ID::uint32 seed_hash() const;
  void set_seed_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seed_hash() const;
  void _internal_set_seed_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 num_keys = 8;
  void clear_num_keys();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_keys() const;
  void set_num_keys(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_keys() const;
  void _internal_set_num_keys(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // double p = 9;
  void clear_p();
  double p() const;
  void set_p(double value);
  private:
  double _internal_p() const;
  void _internal_set_p(double value);
  public:

  // uint64 theta = 10;
  void clear_theta();
  ::PROTOBUF_NAMESPACE_ID::uint64 theta() const;
  void set_theta(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_theta() const;
  void _internal_set_theta(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 preamble_longs = 12;
  void clear_preamble_longs();
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_longs() const;
  void set_preamble_longs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preamble_longs() const;
  void _internal_set_preamble_longs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:datasketches_pb.Update_theta_sketch_dup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::datasketches_pb::Update_theta_sketch_dup_hash_map_count > keys_;
  ::PROTOBUF_NAMESPACE_ID::uint32 serial_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sketch_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rf_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lg_nom_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lg_cur_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_byte_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seed_hash_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_keys_;
  double p_;
  ::PROTOBUF_NAMESPACE_ID::uint64 theta_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preamble_longs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_theta_5fsketch_5fdup_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Update_theta_sketch_dup_hash_map_count

// uint64 hash_val = 1;
inline void Update_theta_sketch_dup_hash_map_count::clear_hash_val() {
  hash_val_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Update_theta_sketch_dup_hash_map_count::_internal_hash_val() const {
  return hash_val_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Update_theta_sketch_dup_hash_map_count::hash_val() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.hash_map_count.hash_val)
  return _internal_hash_val();
}
inline void Update_theta_sketch_dup_hash_map_count::_internal_set_hash_val(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  hash_val_ = value;
}
inline void Update_theta_sketch_dup_hash_map_count::set_hash_val(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_hash_val(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.hash_map_count.hash_val)
}

// uint64 cnt = 2;
inline void Update_theta_sketch_dup_hash_map_count::clear_cnt() {
  cnt_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Update_theta_sketch_dup_hash_map_count::_internal_cnt() const {
  return cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Update_theta_sketch_dup_hash_map_count::cnt() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.hash_map_count.cnt)
  return _internal_cnt();
}
inline void Update_theta_sketch_dup_hash_map_count::_internal_set_cnt(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  cnt_ = value;
}
inline void Update_theta_sketch_dup_hash_map_count::set_cnt(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_cnt(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.hash_map_count.cnt)
}

// -------------------------------------------------------------------

// Update_theta_sketch_dup

// uint32 serial_version = 1;
inline void Update_theta_sketch_dup::clear_serial_version() {
  serial_version_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_serial_version() const {
  return serial_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::serial_version() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.serial_version)
  return _internal_serial_version();
}
inline void Update_theta_sketch_dup::_internal_set_serial_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  serial_version_ = value;
}
inline void Update_theta_sketch_dup::set_serial_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_serial_version(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.serial_version)
}

// uint32 sketch_type = 2;
inline void Update_theta_sketch_dup::clear_sketch_type() {
  sketch_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_sketch_type() const {
  return sketch_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::sketch_type() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.sketch_type)
  return _internal_sketch_type();
}
inline void Update_theta_sketch_dup::_internal_set_sketch_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sketch_type_ = value;
}
inline void Update_theta_sketch_dup::set_sketch_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sketch_type(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.sketch_type)
}

// uint32 rf = 3;
inline void Update_theta_sketch_dup::clear_rf() {
  rf_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_rf() const {
  return rf_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::rf() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.rf)
  return _internal_rf();
}
inline void Update_theta_sketch_dup::_internal_set_rf(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rf_ = value;
}
inline void Update_theta_sketch_dup::set_rf(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rf(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.rf)
}

// uint32 lg_nom_size = 4;
inline void Update_theta_sketch_dup::clear_lg_nom_size() {
  lg_nom_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_lg_nom_size() const {
  return lg_nom_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::lg_nom_size() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.lg_nom_size)
  return _internal_lg_nom_size();
}
inline void Update_theta_sketch_dup::_internal_set_lg_nom_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lg_nom_size_ = value;
}
inline void Update_theta_sketch_dup::set_lg_nom_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lg_nom_size(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.lg_nom_size)
}

// uint32 lg_cur_size = 5;
inline void Update_theta_sketch_dup::clear_lg_cur_size() {
  lg_cur_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_lg_cur_size() const {
  return lg_cur_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::lg_cur_size() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.lg_cur_size)
  return _internal_lg_cur_size();
}
inline void Update_theta_sketch_dup::_internal_set_lg_cur_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lg_cur_size_ = value;
}
inline void Update_theta_sketch_dup::set_lg_cur_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lg_cur_size(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.lg_cur_size)
}

// uint32 flags_byte = 6;
inline void Update_theta_sketch_dup::clear_flags_byte() {
  flags_byte_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_flags_byte() const {
  return flags_byte_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::flags_byte() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.flags_byte)
  return _internal_flags_byte();
}
inline void Update_theta_sketch_dup::_internal_set_flags_byte(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  flags_byte_ = value;
}
inline void Update_theta_sketch_dup::set_flags_byte(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flags_byte(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.flags_byte)
}

// uint32 seed_hash = 7;
inline void Update_theta_sketch_dup::clear_seed_hash() {
  seed_hash_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_seed_hash() const {
  return seed_hash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::seed_hash() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.seed_hash)
  return _internal_seed_hash();
}
inline void Update_theta_sketch_dup::_internal_set_seed_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  seed_hash_ = value;
}
inline void Update_theta_sketch_dup::set_seed_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seed_hash(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.seed_hash)
}

// uint32 num_keys = 8;
inline void Update_theta_sketch_dup::clear_num_keys() {
  num_keys_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_num_keys() const {
  return num_keys_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::num_keys() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.num_keys)
  return _internal_num_keys();
}
inline void Update_theta_sketch_dup::_internal_set_num_keys(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_keys_ = value;
}
inline void Update_theta_sketch_dup::set_num_keys(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_keys(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.num_keys)
}

// double p = 9;
inline void Update_theta_sketch_dup::clear_p() {
  p_ = 0;
}
inline double Update_theta_sketch_dup::_internal_p() const {
  return p_;
}
inline double Update_theta_sketch_dup::p() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.p)
  return _internal_p();
}
inline void Update_theta_sketch_dup::_internal_set_p(double value) {
  
  p_ = value;
}
inline void Update_theta_sketch_dup::set_p(double value) {
  _internal_set_p(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.p)
}

// uint64 theta = 10;
inline void Update_theta_sketch_dup::clear_theta() {
  theta_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Update_theta_sketch_dup::_internal_theta() const {
  return theta_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Update_theta_sketch_dup::theta() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.theta)
  return _internal_theta();
}
inline void Update_theta_sketch_dup::_internal_set_theta(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  theta_ = value;
}
inline void Update_theta_sketch_dup::set_theta(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.theta)
}

// repeated .datasketches_pb.Update_theta_sketch_dup.hash_map_count keys = 11;
inline int Update_theta_sketch_dup::_internal_keys_size() const {
  return keys_.size();
}
inline int Update_theta_sketch_dup::keys_size() const {
  return _internal_keys_size();
}
inline void Update_theta_sketch_dup::clear_keys() {
  keys_.Clear();
}
inline ::datasketches_pb::Update_theta_sketch_dup_hash_map_count* Update_theta_sketch_dup::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:datasketches_pb.Update_theta_sketch_dup.keys)
  return keys_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::datasketches_pb::Update_theta_sketch_dup_hash_map_count >*
Update_theta_sketch_dup::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:datasketches_pb.Update_theta_sketch_dup.keys)
  return &keys_;
}
inline const ::datasketches_pb::Update_theta_sketch_dup_hash_map_count& Update_theta_sketch_dup::_internal_keys(int index) const {
  return keys_.Get(index);
}
inline const ::datasketches_pb::Update_theta_sketch_dup_hash_map_count& Update_theta_sketch_dup::keys(int index) const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.keys)
  return _internal_keys(index);
}
inline ::datasketches_pb::Update_theta_sketch_dup_hash_map_count* Update_theta_sketch_dup::_internal_add_keys() {
  return keys_.Add();
}
inline ::datasketches_pb::Update_theta_sketch_dup_hash_map_count* Update_theta_sketch_dup::add_keys() {
  // @@protoc_insertion_point(field_add:datasketches_pb.Update_theta_sketch_dup.keys)
  return _internal_add_keys();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::datasketches_pb::Update_theta_sketch_dup_hash_map_count >&
Update_theta_sketch_dup::keys() const {
  // @@protoc_insertion_point(field_list:datasketches_pb.Update_theta_sketch_dup.keys)
  return keys_;
}

// uint32 preamble_longs = 12;
inline void Update_theta_sketch_dup::clear_preamble_longs() {
  preamble_longs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::_internal_preamble_longs() const {
  return preamble_longs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Update_theta_sketch_dup::preamble_longs() const {
  // @@protoc_insertion_point(field_get:datasketches_pb.Update_theta_sketch_dup.preamble_longs)
  return _internal_preamble_longs();
}
inline void Update_theta_sketch_dup::_internal_set_preamble_longs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  preamble_longs_ = value;
}
inline void Update_theta_sketch_dup::set_preamble_longs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preamble_longs(value);
  // @@protoc_insertion_point(field_set:datasketches_pb.Update_theta_sketch_dup.preamble_longs)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace datasketches_pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_theta_5fsketch_5fdup_2eproto
